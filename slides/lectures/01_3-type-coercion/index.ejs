<section>
  <h1>Приведення типів</h1>
  <h2>Лекція 1.3</h2>
</section>

<section>
## types
- null
- undefined
- boolean
- number
- string
- object
- symbol—added in ES6!

## typeof
typeof undefined === "undefined"; // true
typeof true === "boolean"; // true
typeof 42 === "number"; // true
typeof "42" === "string"; // true
typeof { life: 42 } === "object"; // true
// added in ES6!
typeof Symbol() === "symbol"; // true

typeof null === "object"; // true
(!a &amp;&amp; typeof a === "object");

typeof function a(b, c){ /* .. */ } === "function"; // true
a.length; // 2

typeof [1,2,3] === "object"; // true

Array.isArray

## undefined vs undeclared

### undfined
var a;
typeof a; // "undefined"

### undefined 1
var b = 42;
var c;
b = c;
typeof b; // "undefined"
typeof c; // "undefined"

### undeclared
var d = e; // ReferenceError: e is not defined
typeof e; // "undefined"

## autodecralation
var d = 43;
e = d;
typeof d; // "number"

### use strict

## Coercion

### Explicit
String( a ); // explicit coercion

### Implicit
a + ""
Object -&gt; ToPrimitive
valueOf then toString (except date)
Primitive -&gt; Primitive
https://learn.javascript.ru/object-conversion
https://www.ecma-international.org/ecma-262/8.0/index.html#sec-abstract-operations
https://www.ecma-international.org/ecma-262/8.0/index.html#sec-addition-operator-plus

#### ToString
null becomes
"null", undefined becomes "undefined", and true becomes
"true"
toString()

#### To Number
For example, true becomes 1 and false becomes 0. undefined
becomes NaN, but (curiously) null becomes 0
valueOf()

#### To JSON
toJSON()

#### TO Boolean
Falsey
- undefined
- null
- false
- +0, -0, and NaN
- ""

#### String Number
Number()
parseInt( 1/0, 19 ) //18
parseInt( 0.000008 ); // 0 ("0" from "0.000008")
parseInt( 0.0000008 ); // 8 ("8" from "8e-7")
parseInt( false, 16 ); // 250 ("fa" from "false")
parseInt( parseInt, 16 ); // 15 ("f" from "function..")
parseInt( "0x10" ); // 16
parseInt( "103", 2 ); // 2


#### Boolean
##### Exlicit
Boolean
!!

##### == ===
https://dorey.github.io/JavaScript-Equality-Table/

[] == ![]; // true
2 == [2]; // true
"" == [null]; // true
0 == "\n"; // true

"0" == false; // true -- UH OH!
false == 0; // true -- UH OH!
false == ""; // true -- UH OH!
false == []; // true -- UH OH!
"" == 0; // true -- UH OH!
"" == []; // true -- UH OH!
0 == []; // true -- UH OH!

"" == 0; // true -- UH OH!
"" == []; // true -- UH OH!
0 == []; // true -- UH OH!

var a = [ 42 ];
var b = "043";
a &lt; b; // false -- string comparison!
Number( a ) &lt; Number( b ); // true -- number comparison!
</section>
