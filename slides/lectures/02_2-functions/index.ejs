<section>
  <h1>Функції</h1>
  <h2>Лекція 2.2</h2>
</section>

<section>
  <h2>Функції</h2>

  <section>
    <h3>Декларація</h3>

    <pre><code class="hljs" data-trim contenteditable>
function hello() {
  console.log('hello');
}

hello(); // hello
    </code></pre>
  </section>

  <section>
    <h3>Як дані</h3>

    <pre><code class="hljs" data-trim contenteditable>
var hello = function() {
  console.log('hello');
}

hello(); // hello
    </code></pre>
  </section>

  <section>
    <h3>Змінна</h3>

    <pre><code class="hljs" data-trim contenteditable>
function hello() {
  console.log('hello');
}

hello = function() {
  console.log('world');
}

hello(); // world
    </code></pre>
  </section>
</section>

<section>
  <h2>Параметри і аргументи</h2>

  <section>
    <pre><code class="hljs" data-trim contenteditable>
function hello(name) {
  console.log('hello ' + name);
}

hello('myself'); // hello myself
    </code></pre>
  </section>

  <section>
    <h3>Кількість аргументів</h3>

    <pre><code class="hljs" data-trim contenteditable>
function enroll(student, course) {
  /*...*/
}

enroll.length; // 2
    </code></pre>
  </section>

  <section>
    <h3>Значення за замовчуванням<small><sup>(ES6)</sup></small></h3>

    <pre><code class="hljs" data-trim contenteditable>
function hello(name = 'Vasya') {
  console.log('hello ' + name);
}

hello('myself'); // hello myself
hello(); // hello Vasya
    </code></pre>
  </section>

  <section>
    <h3>Змінна кількість аргументів (rest)<small><sup>(ES6)</sup></small></h3>

    <pre><code class="hljs" data-trim contenteditable>
function helloAll(...students) {
  for (let student of students) {
    console.log('Hello', student);
  }
}

helloAll('Vasya', 'Petya');
// Hello Vasya
// Hello Petya
    </code></pre>
  </section>

  <section>
    <h3>Розплющення (spread)<small><sup>(ES6)</sup></small></h3>

    <pre><code class="hljs" data-trim contenteditable>
function helloAll(...students) {
  console.log('Hello', ...students);
}

helloAll('Vasya', 'Petya'); // Hello Vasya Petya
    </code></pre>
  </section>

  <section>
    <h3>По старому стилю</h3>

    <pre><code class="hljs" data-trim contenteditable>
function helloAll() {
  for (var i = 0; i &gt; arguments.length; i++) {
    console.log('Hello', arguments[i]);
  }
}

helloAll('Vasya', 'Petya');
// Hello Vasya
// Hello Petya
    </code></pre>
  </section>

  <section>
    <h3>Вирази у аргументах по замовчуванню<small><sup>(ES6)</sup></small></h3>

    <pre><code class="hljs" data-trim contenteditable>
function setMark(student, mark = defaultMark()) {
  console.log(student, 'achieved mark:', mark);
}

function defaultMark() {
  return 'три бала';
}

setMark('Vasyl')
// Vasyl achieved mark: три бала
    </code></pre>
  </section>

  <section>
    <h3>Спеціальний виклик</h3>

    <pre><code class="hljs" data-trim contenteditable>
function helloAll() {
  console.log.apply(null, arguments)
}

helloAll.call(null, 'Vasyl', 'Petro');
helloAll.apply(null, ['Vasyl', 'Petro']);
    </code></pre>
  </section>

  <section>
    <h3>Прив'язування аргументів (bind)</h3>

    <pre><code class="hljs" data-trim contenteditable>
function add(a, b) {
  return a + b;
}

const add2 = add.bind(null, 2);
add2(3); // 5
add(1, 6); // 7
    </code></pre>
  </section>

  <section>
    <h3>Скорочений запис (=&gt;)<small><sup>(ES6)</sup></small></h3>

    <pre><code class="hljs" data-trim contenteditable>
let hello = () =&gt; console.log('hello');
let helloStudent = student =&gt; console.log('hello', student);
let helloAll = (...students) =&gt; {
  console.log('Hello', ...students);
  console.log('Glad to see you')
};

helloAll('Vasya', 'Petro');
// Hello Vasya Petro
// Glad to see you
    </code></pre>
  </section>
</section>

<section>
  <h2>Замикання (closures)</h2>

  <section>
    <p>Замикання - це функції, що посилаються на незалежні (вільні) змінні (змінні, які використовуються локально, але визначені в обмеженій області видимості). Іншими словами, ці функції "пам'ятають" (лексичне) середовище, в якому вони були створені.</p>
  </section>

  <section>
    <pre><code class="hljs" data-trim contenteditable>
function prepareGreet(student) {
  const title = 'Dear ' + student;

  return function(greeting) {
    console.log(title, greeting);
  };
}

const greet = prepareGreet('Vasyl');
greet('you have три бала');
// Dear Vasyl you have три бала
    </code></pre>
  </section>

  <section>
    <pre><code class="hljs" data-trim contenteditable>
function newCounter(init = 0) {
  let count = init;

  return {
    inc: () =&gt; count++
  };
}

const counter = newCounter(7);
counter.inc(); // 8

const anotherCounter = newCounter();
anotherCounter.inc(); // 1
    </code></pre>
  </section>
</section>

<section>
  <h2>Звотротні виклики</h2>

  <section>
    <pre><code class="hljs" data-trim contenteditable>
function greetStudent(nameCallback) {
  let name = nameCallback();
  console.log('Greeting', name);
}

greetStudent(function() {
  return 'Dmytro';
})
    </code></pre>
  </section>

  <section>
    <h3>Таймер</h3>

    <p>Виведе 'Hello World' через 1 секунду</p>
    <pre><code class="hljs" data-trim contenteditable>
setTimeout(function() {
  console.log('Hello World!');
}, 1000);
    </code></pre>
  </section>

  <section>
    <h3>Таймер з повторенням</h3>

    <p>Кожної секунди буде виводити 'Hello World'</p>
    <pre><code class="hljs" data-trim contenteditable>
setInterval(function() {
  console.log('Hello World!');
}, 1000)
    </code></pre>
  </section>

  <section>
    <h3>Функції вищого порядку</h3>

    <p>every/some</p>
    <pre><code class="hljs" data-trim contenteditable>
let arr = [1, 2, 3];
arr.some(e =&gt; e === 2); // true
arr.every(e =&gt; e === 2); // false
    </code></pre>
  </section>

  <section>
    <h3>Функції вищого порядку</h3>

    <p>map</p>
    <pre><code class="hljs" data-trim contenteditable>
let arr = [1, 2, 3];
arr = arr.map(e =&gt; e * 2);
arr; // 2, 4, 6
    </code></pre>
  </section>

  <section>
    <h3>Функції вищого порядку</h3>

    <p>reduce</p>
    <pre><code class="hljs" data-trim contenteditable>
let arr = [1, 2, 3];
arr.reduce((acc, e) =&gt; acc + e); // 6
    </code></pre>
  </section>
</section>

<section>
  <h3>function scope</h3>

  <section>
    <h3>Цикли (проблема)</h3>

    <pre><code class="hljs" data-trim contenteditable>
var funcs = [];
for (var i = 0; i &lt; 3; i++) {
  funcs[i] = function() {
    console.log(i);
  };
}
for (var j = 0; j &lt; 3; j++) {
  funcs[j]();
}
    </code></pre>
  </section>

  <section>
    <h3>Фабрика</h3>

    <pre><code class="hljs" data-trim contenteditable>
function createFunction(i) {
  return function() {
    console.log(i);
  };
}

var funcs = [];
for (var i = 0; i &lt; 3; i++) {
  funcs[i] = createFunction(i);
}
for (var j = 0; j &lt; 3; j++) {
  funcs[j]();
}
    </code></pre>
  </section>

  <section>
    <h3>IIFE</h3>

    <pre><code class="hljs" data-trim contenteditable>
var funcs = [];
for (var i = 0; i &lt; 3; i++) {
  funcs[i] = (function(j) {
    return function() {
      console.log(j);
    };
  }(i));
}
for (var j = 0; j &lt; 3; j++) {
  funcs[j]();
}
    </code></pre>
  </section>

  <section>
    <h3>let<small><sup>(ES6)</sup></small></h3>

    <pre><code class="hljs" data-trim contenteditable>
var funcs = [];
for (let i = 0; i &lt; 3; i++) {
  funcs[i] = function() {
    console.log(i);
  };
}
for (let j = 0; j &lt; 3; j++) {
  funcs[j]();
}
    </code></pre>
  </section>
</section>

<section>
  <h2>Питання?</h2>
</section>
